##about cat 
	cat :a command reads one or more files and copies them to standard output .
	cat file2 file2 ... > newfile
        cat 
        input "what you have input by keyboard"
        output the same content
        cat > filename   : > means to make a newfile or overwrite the file.
                          >> means to make a newfile (if the file is not
                          >> exist)and add something to the file,not
                          >> overwritet the file. 
       	input something by keyboard
  	output the file what you have input.
    	e.g. cat > lazy.txt
        there is something wrong.
	vim lazy.txt
	there is something wrong.
##ls -l direction > a newfile
when the newfile has exited,the command will sent the conten in the direction to the newfile
when the newfil has not exited ,we should use the command:
	ls -l direction >> a newfile
this command will result in the output being appended to the file.
## alias  the command will creat a newfile by an equals sign.

 	alisa foo='cd /usr; ls; cd .'


##about the command "sudo"and "chown"
sudo:to grant superuser privileges.
su: start a shell as another user.
su -l username
chown: the command is used to change the owner of a file or directory.
the command is used as :
ivion@redbird:~$ vim nline.py
vivion@redbird:~$ sudo cp nline.py ~peter
[sudo] password for vivion: 
vivion@redbird:~$ sudo ls -l /home/peter/nline.py 
-rw-r--r-- 1 root root 252 2010-05-14 18:31 /home/peter/nline.py
vivion@redbird:~$ sudo chown peter: ~/nline.py
vivion@redbird:~$ sudo ls -l ~peter/nline.py
-rw-r--r-- 1 root root 252 2010-05-14 18:31 /home/peter/nline.py
sudo chown :peter filename    to change the groupship of the file
sudo chown peter: filename    to change the ownership and groupship of the
file
sudo chown peter  filename     to change the ownership of the file.
so we can use the command "chown" to change the ownership and groupship.

##about echo
echo:to display aline of text
	vivion@redbird:~$ echo this is a test
	 this is a test
	vivion@redbird:~$ echo $((2+2))
	4
	"$"there is used in expression,
	vivion@redbird:~$ echo "this is a   test"
	this is a   test
	vivion@redbird:~$
6.1
	ln:create link
hard link:ln file link;it can iditified with the file,and the size of hard link is nearly the same with the file.
symblic link:ln -s file link(or directory)
whichis :lnly works for executable programs.
alias :assign to the name
unalias :not assign to the name ;we can write alias file into(.bashrc file),after we change the.bashrc file ,the alias will work and save.
e.g. alias foo ='cd /usr;ls;cd -'
	vim .bashrc;editor .bashrc file and save ,then the next time we input foo ,it can run 'cd/usr ;ls;cd -'
	sort:make order for the string.
	less:pager;display the first page
	uniq:to remove any duplicates from the output of the sort command.
	head/tail -n(-f):print the first /last part of files .
	head -n5 ls-output.txt
	tail -n5 ls-output.txt
	tail -f /var/log/message :to view files in real-time.
	tee:read from stain and output to stdout and files seperate it into two branches
    cut :to extract a section of text from a line and output the extracted
section to standard output.
    there are four options about cut ,see man page and know how to use it.
    paste :to add one or more columns of text to a file.
    join :not as same as 'paste',it uses a unique way to do it. 
	ls /usr/bin | tee ls.txt | grep zip
echo $() :command
echo $(()) :expression
``:to execute the command in ``
'':output the same content
"":to express what is in ""
"\":escape the especial meaning
chmod :change file mode 
unmask:when zero appear,the attribute is set .
chown:change file owner .
chgrp:change group ownership.
when you want to modified a file ,but you have no privileges ,you can change the file's ownership and group ownership.
-rw-r--r-x:(owner-gou will acroup-others)
chown vivion file:change file's owner
chgrp vivion file:change file's ownership 
	terminal create
ctrl+shift +t:create a terminal tab
ctrl+pageon/pageup :switch erminal tab
ctrl+d:shut down 
ctrl+l:clear scream
"#"symbols to begin a comment (shell)
if you remove "#",you will activate the aliases.
	ftp and ssh
ftp fileserver
ftp>ls remote command
ftp>lls local command
	lpwd local working path
ssh: ssh usrname@server.com
     scp filename remote path usrname local ip :path
local operating
scp usrname@server.com :path /filename .(from remote server to local server)
	find 
find:find file the hard way
find ~ -type d | wc -l






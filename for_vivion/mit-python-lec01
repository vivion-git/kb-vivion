
the following content is provided under a Creative Commons Licence.
Your support will help MIT Open Course Ware continue to offer high quality
educational resources for free. To make a donation or view additional
materials from hundreds of MIT Courses, visit MIT open Course Ware at
ocw.mit.edu.

Good morning... try it again... Good morning, Thank you! This is 600, also
known as Introduction to Computer Science and Programming, my name is Eric
Grimson,
together with Professor John, good tek? over here, we will be lecturing this
Course  this
term, I want to [give you a heads-up] you are getting some serious
fire power this term, John was the department head for 10 years, like a
century.???? John has been lecturing for 30 years...roughly? alright, I am
the young guy, I've only been lecturing for 25 years. You can tell I have less
gray hair than he does. What I am trying to say to you is, we take this Course
really seriously, we hope you do as well. we think it is really important for
the department to help everybody learn about computation.that is what the
course is about. what I want to do today is three things, I am going to start... with a little bit of
administrivia, how we are going to run this course. I want to talk about the goals of the Course, what you
will be able to do at the end of this Course when you get through it. Then I want to begin talking
about the concepts and tools of computation ... primarily foucs on, we are
going to help you think like a computer scientist.

OK, let's start with the goals. I want to give the goals in two levels.
the strategic goals are the following, we wantna help  to get a easy entry into the
department.. especially for the students who don't have
a lot of prior programming experience. If you are in that category, do
not panic, you are going to get it. we are going to help you wrap in, and you
will certainly be able to start the course6 curriculum still finish on target , we do not expect everybody to
be Course6 majored. For those not in that category, the second thing we want
to do, we want to help student to feel justifiably confident in their ability to
write and read small pieces of code. For all students, we want to do is we
want to give you a understanding of the role computation can and can not play
in tackling technical problems. so you will come away with a sense of what you can do,
what you can not do. and what kind of things you should use to tackle problems 
all students, so that you can easily if you like, to complete your jobs,
because you will have a appropriate confidents in your ablility to do
computational problem Solving.
those are the strategic goals.Now this course is primarily aim the students
who have little or no prior programming experience. As a consequence, we
believe that no sudent here is under qualified for this course, you are all MIT students, and
you are all qualified to be here. But we also hope there are not students here
who are over-qualified for this course. What I mean by that? If you've done
a lot prior program, this is probably not the best course for you. If
you are in that category. I will pleased to encourage talk to John after class about what your
goals are, what kind of experience you have, and how we might find you a
course that better meets your goals. the second reason we do not want
over-qualified students in the class, sounds a little nasty, but the second
reason is an over-qualified student, somebody who has, I don't know, program for google
for the last 5 years is going to have a easy time in this course, but we do not want these students
accidently int the rest of you. we do not want you to feel inadequate when
you are simply inexperienced. so this really the course for students with
little or no prior programming experience. If you are not in that category,
talk to John right after the class we will help you figure where you want to
go.
===4:27===


NOTE:

[give somebody a heads up]
to give someone information or a warning I wanted to give you a heads up that
I'll be sending you the revised form for your approval.

[administrivia]
 - the tiresome but essential details that must be taken care of
and tasks that must be performed in running an organization; 
